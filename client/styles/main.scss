@use "./constants" as *;

@use "./common/buttons";
@use "./common/header";
@use "./common/mixins";
@use "./common/misc";
@use "./components/barnav";
@use "./components/chip-list";
@use "./components/context-menu";
@use "./components/error-boundary";
@use "./components/graph-editor";
@use "./components/progress-bar";
@use "./components/protocol-config";
@use "./components/protocol-overview";
@use "./components/protocol-status";
@use "./components/protocol-timeline";
@use "./components/standard-form";
@use "./components/text-editor";
@use "./components/unit-settings";
@use "./components/visual-editor";
@use "./mcontrol";
@use "./reset";
// @use "./sidebar";
@use "./startup";
@use "./views/protocols";


html {
  block-size: 100%;

  font-size: 14px;
  line-height: $line-height;
}

body {
  block-size: 100%;

  font-family: $main-font;
}


#root {
  height: 100%;
}


.grid {
  display: grid;
  grid-template-columns: 1fr 2px 1fr;

  height: 100%;

  > :nth-child(2) {
    cursor: col-resize;
    position: relative;

    &::before, &::after {
      content: "";

      position: absolute;
      inset: 0;

      height: 100%;
    }

    &::before {
      width: 4px;
      translate: -25% 0;
    }

    &::after {
      width: 1px;
      background-color: #ddd;
    }

    &:is(:hover, ._dragging)::after {
      background-color: $app-blue;
      scale: 4 1;
    }

    &:hover::after {
      transition: background-color $dur-short 300ms, scale $dur-short 300ms;
    }
  }
}
