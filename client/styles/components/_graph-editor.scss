@use "../constants" as *;


.geditor {
  &-root {
    --cell-size: 30px;
    --node-header-height: 40px;
    --node-body-padding-y: #{0.8 * 14px};
    --node-padding: 10px;

    // nodePadding + nodeHeaderHeight * 0.5 == cellSize

    position: absolute;
    inset: 0;
  }

  &-svg {
    background-color: #f1f1f1;
    overflow: visible;
  }


  $orange: #ff851b;

  &-grouproot {

  }

  &-groupobject {
    padding: var(--node-padding);
  }

  &-group {
    height: 100%;

    background-color: rgba($orange, 10%);
    border: 2px solid $orange;
    border-radius: 8px;
  }

  &-grouplabel {
    width: max-content;
    padding: 0.4rem 1rem;

    background-color: $orange;
    border-bottom: 2px solid transparent;
    border-right: 2px solid transparent;
    border-radius: 2px 0 8px 0;

    color: #fff;
    font-weight: 500;
  }


  &-noderoot {
    &._automove {
      transition: transform 150ms;
    }
  }

  &-nodeobject {
    padding: var(--node-padding);
  }

  &-node {
    display: grid;
    grid-template-rows: var(--node-header-height) 1fr;
    height: 100%;

    background-color: #fff;
    border: 2px solid #ddd;
    border-radius: 6px;
    box-shadow: 2px 3px 2px #0001;

    user-select: none;

    &._selected {
      border-color: $app-blue;
    }
  }


  &-header {
    display: flex;
    align-items: center;

    padding: 0 1.6rem;
    border-bottom: 1px solid #ddd;
  }

  &-title {
    font-size: 1.1rem;
    font-weight: 600;
  }

  &-body {
    display: flex;
    flex-direction: column;
    row-gap: 0.4rem;

    align-self: center;
    padding: var(--node-body-padding-y) 1.6rem;
  }

  &-feature {
    display: flex;
    align-items: center;
    column-gap: 0.8rem;
  }

  &-featurelabel {
    font-weight: 500;
  }


  &-link {
    fill: none;
    stroke: #000;
    stroke-linecap: round;
    stroke-width: 2px;

    &._automove {
      transition: d 150ms;
    }
  }
}
