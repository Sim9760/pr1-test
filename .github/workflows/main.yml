on: push
jobs:
  build-macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - run: pip3 install wheel
      - name: Build the shared package
        run: |
          npm install
          npm run build
        working-directory: app/shared
      - name: Build the library package
        run: |
          npm install
          npm run build
        working-directory: app/library
      - name: Build the client
        run: |
          npm install
          npm run build
        working-directory: client
      - name: Build the client of each unit
        run: for d in */client; do cd $d; npm install; npm run build; cd -; done
        working-directory: units
      - name: Build the server
        run: npm run build:host
        working-directory: app/electron
      - name: Build and package the app
        run: |
          npm install
          npm run build
          npm run make
        working-directory: app/electron
      - run: ls app/electron/out/make/zip/darwin
      - uses: actions/upload-artifact@v3
        with:
          name: build-macos
          path: app/electron/out/make/zip/darwin/x64/*.zip

  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - run: pip3 install wheel
      - name: Build the shared package
        run: |
          npm install
          npm run build
        working-directory: app/shared
      - name: Build the library package
        run: |
          npm install
          npm run build
        working-directory: app/library
      - name: Build the client
        run: |
          npm install
          npm run build
        working-directory: client
      - name: Build the client of each unit
        run: |
          foreach ($d in dir */client) { pushd $d; npm install; npm run build; popd }
          pushd core/client; npm run deref; popd
        working-directory: units
      - name: Build the server
        run: |
          pip3 wheel --no-deps --wheel-dir packages ../server
          pip3 wheel --no-deps --wheel-dir packages ../../host
          pip3 wheel --no-deps --wheel-dir packages ../../units/core
          pip3 wheel --no-deps --wheel-dir packages ../../units/amf
          pip3 wheel --no-deps --wheel-dir packages ../../units/okolab
          pip3 wheel --no-deps --wheel-dir packages ../../units/opcua
        working-directory: app/electron
      - name: Build and package the app
        run: |
          npm install
          npm run build
          npm run make
        working-directory: app/electron
      - uses: actions/upload-artifact@v3
        with:
          name: build-windows
          path: app/electron/out/make/squirrel.windows/x64/*Setup.exe

  upload:
    runs-on: ubuntu-latest
    needs: [build-macos, build-windows]
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::223838961905:role/github_actions_permision_role
          aws-region: eu-central-1
      - run: mkdir -p builds
      - uses: actions/download-artifact@v3
        with:
          name: build-macos
          path: builds/macos
      - uses: actions/download-artifact@v3
        with:
          name: build-windows
          path: builds/windows
      - run: ls -R
      - run: aws s3 sync builds s3://scheduler-app-builds
